<?xml version="1.0"?>

<PropertyList>
    <name>select</name>
    <layout>vbox</layout>
    <resizable>true</resizable>
    <default-padding>3</default-padding>

    <group>
        <layout>hbox</layout>
        <default-padding>1</default-padding>

        <empty>
            <stretch>true</stretch>
        </empty>

        <text>
            <label>Select</label>
        </text>

        <empty>
            <stretch>true</stretch>
        </empty>

        <button>
            <legend/>
            <key>Esc</key>
            <pref-width>16</pref-width>
            <pref-height>16</pref-height>
            <border>2</border>
            <binding>
                <command>dialog-close</command>
            </binding>
        </button>
    </group>

    <hrule/>

    <list>
        <name>select-list</name>
        <pref-width>200</pref-width>
        <pref-height>250</pref-height>
        <halign>fill</halign>
        <valign>fill</valign>
        <stretch>true</stretch>
        <property>/sim/gui/dialogs/select/selected</property>
        <properties>/sim/gui/dialogs/select/list</properties>
        <binding>
            <command>dialog-apply</command>
            <object-name>select-list</object-name>
        </binding>
        <binding>
            <command>nasal</command>
            <script>select()</script>
        </binding>
    </list>

    <nasal>
        <open>
         <![CDATA[
            var self = props.globals.getNode("/sim/gui/dialogs/select", 1);
			var propaty = props.globals.getNode("/autopilot/route-manager/", 1);
            var terget = self.getValue("terget");
            var selected = self.getNode("selected", 1);

            var select = func {
				var path = self.getValue("property");
                propaty.setValue(path, selected.getValue());
				#gui.dialog_apply("route-manager", terget);
            }

            #var L = setlistener(self.getNode("terget").getPath(), func {
			#	gui.dialog_update('select-list');
			#	gui.display_apply('select-list');
            #}, 1, 0);
         ]]>
        </open>

        <close>
            self.getNode("list").removeAllChildren();
            #removelistener(L);
        </close>
    </nasal>
</PropertyList>
